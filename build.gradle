plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.spring'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.retry:spring-retry'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //spock
    testImplementation('org.spockframework:spock-core:2.3-groovy-4.0')
    testImplementation('org.spockframework:spock-spring:2.3-groovy-4.0')
    testImplementation('net.bytebuddy:byte-buddy:1.14.5') // 런타임에 클래스 기반 mock을 만들기 위해서 필요
    //testcontainers
    testImplementation "org.testcontainers:mariadb:1.18.3"
    testImplementation "org.testcontainers:spock:1.18.3"
    // mockWebServer
    testImplementation('com.squareup.okhttp3:okhttp:4.11.0')
    testImplementation('com.squareup.okhttp3:mockwebserver:4.11.0')
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveFileName = "app.jar"
}

jar {
    enabled = false
}
